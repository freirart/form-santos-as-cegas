{"version":3,"sources":["helpers/formHelper.ts","assets/images/santos-as-cegas-form-header.jpg","pages/Form.tsx","routes.tsx","App.tsx","index.tsx"],"names":["cellPhoneMask","isoDateMask","fillEmail","value","test","isCellphoneCorrect","cellPhone","length","comparisonDate","moment","add","format","Form","useState","age","setAge","name","setName","email","setEmail","cellphone","setCellphone","selectedDate","setSelectedDate","checkedRisk","setCheckedRisk","checkedCertificate","setCheckedCertificate","dialogOpen","setDialogOpen","undefined","nameError","setNameError","emailError","setEmailError","ageError","setAgeError","cellphoneError","setCellphoneError","dateError","setDateError","isBtnDisabled","handleDate","target","inputtedDate","momentDate","isValid","id","Card","CardMedia","component","height","image","cardHeaderImg","alt","CardContent","Typography","gutterBottom","variant","color","className","Stack","spacing","TextField","required","label","fullWidth","placeholder","error","onChange","inputtedName","onBlur","helperText","typedEmail","inputtedAge","formattedValue","replace","Number","slice","String","fillAge","currValue","prevValue","typedCellphone","_","initial","join","pattern","i","v","toString","mask","DatePicker","renderInput","props","minDate","newValue","inputFormat","shouldDisableDate","date","onAccept","FormGroup","FormControlLabel","control","Checkbox","checked","Tooltip","title","placement","Button","startIcon","disabled","onClick","Dialog","open","onClose","DialogTitle","aria-label","role","DialogContent","DialogContentText","DialogActions","Routes","path","App","LocalizationProvider","dateAdapter","AdapterMoment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aafd1de.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nexport const cellPhoneMask = \"(##) #####-####\";\n\nexport const isoDateMask = \"YYYY-MM-DD\";\n\nexport const mask = (value: string, pattern: string) => {\n  let i = 0;\n  const v = value.toString();\n\n  return pattern.replace(/#/g, () => v[i++] || \"\");\n};\n\nexport const fillCellphone = (currValue: string, prevValue: string) => {\n  if (currValue === _.initial(prevValue).join(\"\") || !currValue) {\n    return currValue;\n  }\n\n  return mask(currValue.replace(/\\D/g, \"\"), cellPhoneMask);\n};\n\nexport const fillAge = (value: string) => {\n  if (!value) {\n    return value;\n  }\n\n  const formattedValue = value.replace(/\\D/g, \"\");\n\n  if (Number(formattedValue) <= 0) {\n    return \"\";\n  } else if (Number(formattedValue) > 100) {\n    return formattedValue.slice(0, 2);\n  }\n\n  return String(formattedValue);\n};\n\nexport const fillEmail = (value: string) => {\n  const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n\n  return !regex.test(value);\n};\n\nexport const isCellphoneCorrect = (cellPhone: string) => {\n  return cellPhone && cellPhone.length === cellPhoneMask.length;\n};\n","export default __webpack_public_path__ + \"static/media/santos-as-cegas-form-header.a96a52d1.jpg\";","import React, { useState } from \"react\";\nimport moment from \"moment\";\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Stack,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Button,\n  FormGroup,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/lab\";\n\nimport EventAvailableIcon from \"@mui/icons-material/EventAvailable\";\n\nimport {\n  fillAge,\n  fillEmail,\n  fillCellphone,\n  isCellphoneCorrect,\n  isoDateMask,\n} from \"../helpers/formHelper\";\n\nimport cardHeaderImg from \"../assets/images/santos-as-cegas-form-header.jpg\";\n\nimport \"./styles.css\";\n\nconst comparisonDate = moment(\n  moment().add(1, \"day\").format(isoDateMask),\n  isoDateMask\n);\n\nfunction Form() {\n  const [age, setAge] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [cellphone, setCellphone] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState<moment.Moment | null>(null);\n  const [checkedRisk, setCheckedRisk] = useState(false);\n  const [checkedCertificate, setCheckedCertificate] = useState(false);\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const [nameError, setNameError] = useState<undefined | boolean>(undefined);\n  const [emailError, setEmailError] = useState<undefined | boolean>(undefined);\n  const [ageError, setAgeError] = useState<undefined | boolean>(undefined);\n  const [cellphoneError, setCellphoneError] = useState<undefined | boolean>(\n    undefined\n  );\n  const [dateError, setDateError] = useState<undefined | boolean>(undefined);\n\n  const areFieldsFilled =\n    emailError !== undefined &&\n    !emailError &&\n    nameError !== undefined &&\n    !nameError &&\n    ageError !== undefined &&\n    !ageError &&\n    cellphoneError !== undefined &&\n    !cellphoneError;\n\n  const areChecksChecked = checkedRisk && checkedCertificate;\n\n  const isBtnDisabled =\n    !areFieldsFilled ||\n    !areChecksChecked ||\n    dateError ||\n    dateError === undefined;\n\n  const handleDate = ({ target }: any) => {\n    const inputtedDate = target?.value;\n    const momentDate = moment(inputtedDate, \"DD/MM/YYYY\");\n\n    setDateError(\n      !inputtedDate || !momentDate.isValid() || momentDate < comparisonDate\n    );\n  };\n\n  return (\n    <div id=\"form-wrapper\">\n      <Card>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image={cardHeaderImg}\n          alt=\"Santos às cegas\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            Agendar passeio \"Santos às Cegas\"\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Preencha as informações abaixo para agendar um passeio pelo projeto\n            com o projeto \"Santos às Cegas\".\n          </Typography>\n\n          <div className=\"margin-top-div\">\n            <Stack spacing={3}>\n              <TextField\n                required\n                label=\"Nome completo\"\n                fullWidth\n                placeholder=\"Renato Frosch\"\n                value={name}\n                error={nameError}\n                onChange={({ target }) => {\n                  const inputtedName = target.value;\n                  setName(inputtedName);\n\n                  setNameError(!inputtedName);\n                }}\n                onBlur={({ target }) => {\n                  const inputtedName = target.value;\n\n                  if (!inputtedName) {\n                    setNameError(true);\n                  }\n                }}\n                helperText={nameError ? \"Insira um nome!\" : \" \"}\n              />\n              <TextField\n                required\n                fullWidth\n                label=\"Seu melhor e-mail\"\n                value={email}\n                error={emailError}\n                placeholder=\"santosascegas@gmail.com\"\n                onChange={({ target }) => {\n                  const typedEmail = target.value;\n\n                  setEmail(typedEmail);\n                  setEmailError(fillEmail(typedEmail));\n                }}\n                onBlur={({ target }) => {\n                  const typedEmail = target.value;\n\n                  if (!typedEmail) {\n                    setEmailError(true);\n                  } else {\n                    setEmailError(fillEmail(typedEmail));\n                  }\n                }}\n                helperText={emailError ? \"Insira com um e-mail válido!\" : \" \"}\n              />\n              <div className=\"nowrap-div\">\n                <TextField\n                  required\n                  label=\"Idade\"\n                  placeholder=\"18\"\n                  fullWidth\n                  value={age}\n                  error={ageError}\n                  onChange={({ target }) => {\n                    const inputtedAge = target.value;\n\n                    setAge(fillAge(inputtedAge));\n                    setAgeError(!inputtedAge);\n                  }}\n                  helperText={ageError ? \"Insira uma idade!\" : \" \"}\n                  onBlur={({ target }) => setAgeError(!target.value)}\n                />\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Telefone/Celular\"\n                  placeholder=\"(99) 99999-9999\"\n                  value={cellphone}\n                  error={cellphoneError}\n                  onChange={({ target }) => {\n                    const typedCellphone = target.value;\n\n                    setCellphone(fillCellphone(typedCellphone, cellphone));\n\n                    setCellphoneError(!isCellphoneCorrect(typedCellphone));\n                  }}\n                  onBlur={({ target }) =>\n                    setCellphoneError(!isCellphoneCorrect(target.value))\n                  }\n                  helperText={\n                    cellphoneError ? \"Insira um telefone/celular válido!\" : \" \"\n                  }\n                />\n              </div>\n\n              <DatePicker\n                renderInput={(props) => {\n                  return (\n                    <TextField\n                      {...props}\n                      required\n                      error={dateError}\n                      helperText={\n                        dateError ? \"Entre com uma data válida!\" : \" \"\n                      }\n                      onChange={handleDate}\n                      onBlur={handleDate}\n                    />\n                  );\n                }}\n                label=\"Data do passeio\"\n                value={selectedDate}\n                minDate={moment()}\n                onChange={(newValue) => setSelectedDate(newValue)}\n                inputFormat=\"DD/MM/YYYY\"\n                shouldDisableDate={(date) => date < comparisonDate}\n                onAccept={() => {\n                  if (dateError) {\n                    setDateError(false);\n                  }\n                }}\n              />\n            </Stack>\n          </div>\n\n          <div className=\"margin-top-div\">\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={({ target }) => setCheckedRisk(target.checked)}\n                  />\n                }\n                label=\"Concordo estar ciente acerca dos riscos envolvendo o passeio. *\"\n              />\n              <br />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={({ target }) =>\n                      setCheckedCertificate(target.checked)\n                    }\n                  />\n                }\n                label=\"Concordo estar compromissado em trazer um atestado médico com\n                  a permissão de atividades aeróbicas. *\"\n              />\n            </FormGroup>\n          </div>\n\n          <div className=\"margin-top-div\">\n            <Tooltip\n              title={isBtnDisabled ? \"Informações incompletas!\" : \"\"}\n              placement=\"top\"\n            >\n              <span>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EventAvailableIcon />}\n                  disabled={isBtnDisabled}\n                  onClick={() => setDialogOpen(true)}\n                >\n                  Agendar\n                </Button>\n              </span>\n            </Tooltip>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle id=\"responsive-dialog-title\">\n          [MOCK] O seu pedido de agendamento foi enviado com sucesso!{\" \"}\n          <span aria-label=\"Apaixonado\" role=\"img\">\n            😍\n          </span>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Em breve você receberá um e-mail de confirmação com os dados aqui\n            informados com a respectiva resposta do agendamento.\n          </DialogContentText>\n          <br />\n          <DialogContentText>\n            Não esqueça de checar a caixa de spam para ficar ligado na situação\n            do seu pedido!{\" \"}\n            <span aria-label=\"Apaixonado\" role=\"img\">\n              😉\n            </span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Form from \"./pages/Form\";\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={Form} />\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\n\nimport AdapterMoment from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n\nimport Routes from \"./routes\";\n\nimport \"./assets/styles/global.css\";\n\nfunction App() {\n  return (\n    <LocalizationProvider dateAdapter={AdapterMoment}>\n      <Routes />\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}